name: 'zLoad Balancer (Call)'
run-name: '${{ github.actor }} - Managing Azure Load Balancer'
on:
  workflow_call:
    inputs:
      requestType:
        type: string
        required: false
      environment:
        type: string
        required: true
      location:
        type: string
        required: true
      purposeRG:
        type: string
        required: true
      sku_name:
        type: string
        required: false
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
env:
  permissions:
  contents: read
jobs:
  manage-lb:
    name: 'Manage Load Balancer'
    env:
      ARM_CLIENT_ID:        ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET:    ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID:        ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ROOT_PATH:            'Azure/Azure-LB'
    runs-on: 
      group: aks-runners
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout - Load Balancer (${{ inputs.purposeRG }})'
        uses: actions/checkout@v3

      # Terraform Initialize
      - name: 'Terraform Initialize - Load Balancer (${{ inputs.purposeRG }})'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version:     latest
          tf_actions_subcommand:  'init'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}
          tf_actions_comment:     true
        env:
          TF_VAR_request_type:    '${{ inputs.requestType }}'
          TF_VAR_environment:     '${{ inputs.environment }}'
          TF_VAR_location:        '${{ inputs.location }}'
          TF_VAR_purposeRG:      '${{ inputs.purposeRG }}'
          TF_VAR_sku_name:        '${{ inputs.sku_name }}'
      - name: 'Terraform Plan - Create Load Balancer'
        if: ${{ inputs.requestType == 'Create (with New RG)' || inputs.requestType == 'Create (with Existing RG)' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version:     latest
          tf_actions_subcommand:  'plan'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}
          tf_actions_comment:     true
        env:
          TF_VAR_request_type:    '${{ inputs.requestType }}'
          TF_VAR_environment:     '${{ inputs.environment }}'
          TF_VAR_location:        '${{ inputs.location }}'
          TF_VAR_purposeRG:      '${{ inputs.purposeRG }}'
          TF_VAR_sku_name:        '${{ inputs.sku_name }}'

      # Terraform Apply to create the Load Balancer
      - name: 'Terraform Apply - Create Load Balancer'
        if: ${{ inputs.requestType == 'Create (with New RG)' || inputs.requestType == 'Create (with Existing RG)' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version:     latest
          tf_actions_subcommand:  'apply'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}
          tf_actions_comment:     true
        env:
          TF_VAR_request_type:    '${{ inputs.requestType }}'
          TF_VAR_environment:     '${{ inputs.environment }}'
          TF_VAR_location:        '${{ inputs.location }}'
          TF_VAR_purposeRG:      '${{ inputs.purposeRG }}'
          TF_VAR_sku_name:        '${{ inputs.sku_name }}'
      - name: 'Terraform Destroy - Remove Load Balancer'
        if: ${{ inputs.requestType == 'destroy' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version:     latest
          tf_actions_subcommand:  'destroy'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}
          tf_actions_comment:     true
        env:
          TF_VAR_request_type:    '${{ inputs.requestType }}'
          TF_VAR_environment:     '${{ inputs.environment }}'
          TF_VAR_location:        '${{ inputs.location }}'
          TF_VAR_purposeRG:      '${{ inputs.purposeRG }}'
          TF_VAR_sku_name:        '${{ inputs.sku_name }}'
