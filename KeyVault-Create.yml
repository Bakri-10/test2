name: 'Deploy or Destroy Key Vault'
run-name: '${{inputs.environment}}: ${{inputs.action}} KeyVault ${{inputs.purpose}} in RG ${{inputs.purposeRG}} - ${{github.actor}}'
on:
  workflow_dispatch:
    inputs:
      requestType:
        type: choice
        required: true
        description: Request Type
        options:
          - 'Select'
          - Create (with New RG)
          - Create (with Existing RG)
      location:
        type: choice
        description: Location
        required: true
        options:
          - 'Select'
          - eastus2
          - centralus
          - uksouth
          - ukwest
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - 'Select'
          - dev
          - qa
          - uat
          - Prod
      purposeRG:
        type: string
        required: true
        description: Purpose for Resource Group Name [3-5 char]
      purpose:
        type: string
        required: true
        description: Purpose for KeyVault Name [3-5 char]
      sku:
        type: choice
        required: true
        description: KeyVault SKU
        options:
          - 'Select'
          - 'standard'    
          - 'premium'   
      subnetNamePrivateEndpoint:
        type: string
        required: true
        default: ''
        description: Subnet Name for Private Endpoint
      subnetNameSvcEndpoint:
        type: string
        required: true
        default: ''
        description: Subnet Name for Service Endpoint (Enable Selected Networks)
      ipRules:
        type: string
        required: false
        default: ''
        description: List of IPv4 Addresses to allow through Networking (comma separated ex- 111.222.333.44/32)
      action:
        type: choice
        required: true
        description: Choose the action to perform (Create or Destroy)
        options:
          - create
          - destroy

jobs:
  New-RG:
    if: (github.event.inputs.purpose != '' && github.event.inputs.purposeRG != '' && github.event.inputs.requestType== 'Create (with New RG)' && github.event.inputs.action == 'create')
    name: 'New Resource Group'
    uses: ./.github/workflows/CreateResourceGroup.yml
    secrets:
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      name: 'resource-group'
      subscription: '${{inputs.subscription}}'
      location: '${{inputs.location}}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purposeRG}}'

  Deploying-Key-Vault-New-RG:
    if: (github.event.inputs.purpose != '' && github.event.inputs.purposeRG != '' && github.event.inputs.requestType== 'Create (with New RG)' && github.event.inputs.action == 'create')
    name: 'Deploying Key Vault'
    needs: 'New-RG'
    uses: ./.github/workflows/KeyVault-Create.yml
    secrets:
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      location: '${{inputs.location}}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      purposeRG: '${{inputs.purposeRG}}'
      subnetNamePrivateEndpoint: '${{inputs.subnetNamePrivateEndpoint}}'
      subnetNameSvcEndpoint: '${{inputs.subnetNameSvcEndpoint}}'
      ipRules: '${{inputs.ipRules}}'
      sku: '${{inputs.sku}}'

  Deploying-Key-Vault-Existing-RG:
    if: (github.event.inputs.purpose != '' && github.event.inputs.purposeRG != '' && github.event.inputs.requestType== 'Create (with Existing RG)' && github.event.inputs.action == 'create')
    name: 'Deploying Key Vault to Existing RG'
    uses: ./.github/workflows/KeyVault-Create.yml
    secrets:
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      location: '${{inputs.location}}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      purposeRG: '${{inputs.purposeRG}}'
      subnetNamePrivateEndpoint: '${{inputs.subnetNamePrivateEndpoint}}'
      subnetNameSvcEndpoint: '${{inputs.subnetNameSvcEndpoint}}'
      ipRules: '${{inputs.ipRules}}'
      sku: '${{inputs.sku}}'

  Destroy-Key-Vault:
    if: (github.event.inputs.action == 'destroy')
    name: 'Destroy Key Vault'
    uses: ./.github/workflows/DestroyKeyVault.yml
    secrets:
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      location: '${{inputs.location}}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      purposeRG: '${{inputs.purposeRG}}'
      subnetNamePrivateEndpoint: '${{inputs.subnetNamePrivateEndpoint}}'
      subnetNameSvcEndpoint: '${{inputs.subnetNameSvcEndpoint}}'
      ipRules: '${{inputs.ipRules}}'
      sku: '${{inputs.sku}}'
